@using dotless.Core.Parser.Tree
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - PX Question Bank Admin</title>
    @Styles.Render("~/bundles/css")
    @Styles.Render("~/bundles/bootstrapcss")
    @Styles.Render("~/bundles/bootstrap-theme")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
     @Html.Partial("MainMenu")
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            @{string version = typeof(BundleConfig).Assembly.GetName().Version.ToString();}
            <p>&copy; @DateTime.Now.Year - Macmillan. Version @version</p>
        </footer>
    </div>
    @Html.Partial("_CommonJS")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/bootstrap-components")
    @Scripts.Render("~/bundles/respond")
    @Scripts.Render("~/bundles/react")
    @Scripts.Render("~/bundles/crossroads")
    @Scripts.Render("~/bundles/chosen")
    @Scripts.Render("~/bundles/handlebars")
    @Scripts.Render("~/bundles/commonjs")
    @Scripts.Render("~/bundles/easyXDM")
    @Scripts.Render("~/bundles/customQuestions")

    @RenderSection("scripts", required: false)
    
    <script>
        sessionKeeper.startSessionKeeper('@Url.Action("KeepSessionAlive", "User")', 60000);
        // jqXHRData needed for grabbing by data object of fileupload scope
        var jqXHRData;

        $(document).ready(function () {

            //Initialization of fileupload
            initSimpleFileUpload();
        });

        function initSimpleFileUpload() {
            'use strict';

            $('#uploader').fileupload({
                url: '@Url.Action("UploadFile", "Import")',
                dataType: 'json',
                done: function (event, data) {
                    if (!data.result.isValidated) {
                        notificationManager.showDanger("Error during validation occured. Invalid file or format.");
                        return;
                    }
                    
                    if (data.result.questionCount == 0) {
                        notificationManager.showWarning("There are no questions to import");
                        return;
                    }

                    window.location = '/Import/ImportToTitle/';

                },
                fail: function (event, data) {
                    notificationManager.showDanger("Error during uploading, please, try again");
                },
                dropZone: null,
                pasteZone: null,
                progress: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#bar').css(
                        'width',
                        progress + '%'
                    );
                }
            });
        }
    </script>

</body>
</html>
