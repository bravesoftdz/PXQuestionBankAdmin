<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" requirePermission="true" />
    <section name="agilixSessionManager" type="Bfw.Agilix.Dlap.Configuration.SessionManagerSection, Bfw.Agilix.Dlap"/>
  </configSections>
  <appSettings>
    <add key="user" value="root/pxmigration"/>
    <add key="password" value="Px-Migration-123"/>
  </appSettings>
  <agilixSessionManager>
    <dlapConnection url="http://dev.dlap.bfwpub.com/dlap.ashx"></dlapConnection>
    <bhConnection url="http://root.dev.brainhoney.bfwpub.com/BrainHoney/Controls/CredentialsUI.ashx" userDomain="pxmigration" cookieDomain=".bfwpub.com" />
    <annonymous id="13" username="pxmigration/anonymous" password="Px-Anon-123"></annonymous>
    <admin id="7" username="root/pxmigration" password="Px-Migration-123"></admin>
  </agilixSessionManager>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <!-- Lifetime manager types -->
    <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"/>
    <alias alias="perThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity"/>
    <alias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity"/>
    <!-- Agilix Services -->
    <alias alias="IUserService" type="Bfw.Agilix.ServiceContracts.IUserService, Bfw.Agilix.ServiceContracts"/>
    <alias alias="UserService" type="Bfw.Agilix.Services.UserService, Bfw.Agilix.Services"/>
    <alias alias="IItemService" type="Bfw.Agilix.ServiceContracts.IItemService, Bfw.Agilix.ServiceContracts"/>
    <alias alias="ItemService" type="Bfw.Agilix.Services.ItemService, Bfw.Agilix.Services"/>
    <alias alias="IAnnouncementService" type="Bfw.Agilix.ServiceContracts.IAnnouncementService, Bfw.Agilix.ServiceContracts"/>
    <alias alias="AnnouncementService" type="Bfw.Agilix.Services.AnnouncementService, Bfw.Agilix.Services"/>
    <alias alias="IDiscussionService" type="Bfw.Agilix.ServiceContracts.IDiscussionService, Bfw.Agilix.ServiceContracts"/>
    <alias alias="DiscussionService" type="Bfw.Agilix.Services.DiscussionService, Bfw.Agilix.Services"/>
    <alias alias="IGradeService" type="Bfw.Agilix.ServiceContracts.IGradeService, Bfw.Agilix.ServiceContracts"/>
    <alias alias="GradeService" type="Bfw.Agilix.Services.GradeService, Bfw.Agilix.Services"/>
    <alias alias="IGroupService" type="Bfw.Agilix.ServiceContracts.IGroupService, Bfw.Agilix.ServiceContracts"/>
    <alias alias="GroupService" type="Bfw.Agilix.Services.GroupService, Bfw.Agilix.Services"/>
    <alias alias="ICourseService" type="Bfw.Agilix.ServiceContracts.ICourseService, Bfw.Agilix.ServiceContracts"/>
    <alias alias="CourseService" type="Bfw.Agilix.Services.CourseService, Bfw.Agilix.Services"/>
    <alias alias="IEnrollmentService" type="Bfw.Agilix.ServiceContracts.IEnrollmentService, Bfw.Agilix.ServiceContracts"/>
    <alias alias="EnrollmentService" type="Bfw.Agilix.Services.EnrollmentService, Bfw.Agilix.Services"/>
    <alias alias="IQuestionService" type="Bfw.Agilix.ServiceContracts.IQuestionService, Bfw.Agilix.ServiceContracts"/>
    <alias alias="QuestionService" type="Bfw.Agilix.Services.QuestionService, Bfw.Agilix.Services"/>
    <!-- Agilix Components -->
    <alias alias="ISessionManager" type="Bfw.Agilix.Dlap.Session.ISessionManager, Bfw.Agilix.Dlap"/>
    <alias alias="SessionManager" type="Bfw.Agilix.Dlap.Components.Session.ThreadSessionManager, Bfw.Agilix.Dlap.Components"/>
    <!-- Core Components -->
    <alias alias="ILogger" type="Bfw.Common.Logging.ILogger, Bfw.Common"/>
    <alias alias="Logger" type="Bfw.Common.Patterns.Logging.EnterpriseLibraryLogger, Bfw.Common.Patterns"/>
    <container name="unity">
      <!-- Agilix Services -->
      <register type="IUserService" mapTo="UserService">
        <lifetime type="perThread"/>
      </register>
      <register type="IItemService" mapTo="ItemService">
        <lifetime type="perThread"/>
      </register>
      <register type="IAnnouncementService" mapTo="AnnouncementService">
        <lifetime type="perThread"/>
      </register>
      <register type="IDiscussionService" mapTo="DiscussionService">
        <lifetime type="perThread"/>
      </register>
      <register type="IGradeService" mapTo="GradeService">
        <lifetime type="perThread"/>
      </register>
      <register type="ICourseService" mapTo="CourseService">
        <lifetime type="perThread"/>
      </register>
      <register type="IEnrollmentService" mapTo="EnrollmentService">
        <lifetime type="perThread"/>
      </register>
      <register type="IQuestionService" mapTo="QuestionService">
        <lifetime type="perThread"/>
      </register>
      <register type="IGroupService" mapTo="GroupService">
        <lifetime type="perThread"/>
      </register>
      <!-- Agilix Components -->
      <register type="ISessionManager" mapTo="SessionManager">
        <lifetime type="perThread"/>
      </register>
      <!-- Core Components -->
      <register type="ILogger" mapTo="Logger">
        <lifetime type="singleton"/>
      </register>      
    </container>
  </unity>

  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="General" logWarningsWhenNoCategoriesMatch="false" >
    <listeners>
      <add name="Event Log Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging"
          listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging"
          source="PX Metadata Tool" formatter="Text Formatter"
          log="Application" machineName="." traceOutputOptions="None" />
      <add name="Rolling Flat File Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging"
                listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging"
                formatter="Text Formatter" rollSizeKB="512000" traceOutputOptions="DateTime, Timestamp, Callstack" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
          template="Timestamp: {timestamp}{newline}&#xA;Message: {message}{newline}&#xA;Category: {category}{newline}&#xA;Priority: {priority}{newline}&#xA;EventId: {eventid}{newline}&#xA;Severity: {severity}{newline}&#xA;Title:{title}{newline}&#xA;Machine: {localMachine}{newline}&#xA;App Domain: {localAppDomain}{newline}&#xA;ProcessId: {localProcessId}{newline}&#xA;Process Name: {localProcessName}{newline}&#xA;Thread Name: {threadName}{newline}&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xA;Extended Properties: {dictionary({key} - {value}{newline})}"
          name="Text Formatter" />
    </formatters>
    <logFilters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.CategoryFilter, Microsoft.Practices.EnterpriseLibrary.Logging"
          name="Category Filter">
        <!-- Production Category Filters -->
        <!--<categoryFilters>
          <add name="Warning" />
          <add name="Debug" />
          <add name="Information" />
        </categoryFilters>-->
      </add>
    </logFilters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <!--<add name="Rolling Flat File Trace Listener" />-->
          <!--<add name="Event Log Listener" />-->
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events">
        <listeners>
          <!--<add name="Rolling Flat File Trace Listener" />-->
          <!--<add name="Event Log Listener" />-->
        </listeners>
      </allEvents>
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <!--<add name="Rolling Flat File Trace Listener" />-->
          <!--<add name="Event Log Listener" />-->
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
</configuration>