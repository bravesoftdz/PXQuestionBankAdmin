//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Bfw.PX.Biz.Direct.Services.RA.StudentRegistration {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RAStudentRegistrationSoap", Namespace="RAStudentRegistration")]
    public partial class RAStudentRegistration : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StudentRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback StudentRegistration1OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RAStudentRegistration() {
            this.Url = global::Bfw.PX.Biz.Direct.Services.Properties.Settings.Default.Bfw_PX_Biz_Direct_Services_RA_StudentRegistration_RAStudentRegistration;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StudentRegistrationCompletedEventHandler StudentRegistrationCompleted;
        
        /// <remarks/>
        public event StudentRegistration1CompletedEventHandler StudentRegistration1Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("RAStudentRegistration/StudentRegistration", RequestNamespace="RAStudentRegistration", ResponseNamespace="RAStudentRegistration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StudentRegistration(string sUserName, string sInstructorEmail, string sUserFirstName, string sUserLastName, string sUserPwd, string sVerifyPwd, string sUserPwdHint, string sRemoteIPAddr, string sBaseURL, out string sErrorMsg) {
            object[] results = this.Invoke("StudentRegistration", new object[] {
                        sUserName,
                        sInstructorEmail,
                        sUserFirstName,
                        sUserLastName,
                        sUserPwd,
                        sVerifyPwd,
                        sUserPwdHint,
                        sRemoteIPAddr,
                        sBaseURL});
            sErrorMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StudentRegistrationAsync(string sUserName, string sInstructorEmail, string sUserFirstName, string sUserLastName, string sUserPwd, string sVerifyPwd, string sUserPwdHint, string sRemoteIPAddr, string sBaseURL) {
            this.StudentRegistrationAsync(sUserName, sInstructorEmail, sUserFirstName, sUserLastName, sUserPwd, sVerifyPwd, sUserPwdHint, sRemoteIPAddr, sBaseURL, null);
        }
        
        /// <remarks/>
        public void StudentRegistrationAsync(string sUserName, string sInstructorEmail, string sUserFirstName, string sUserLastName, string sUserPwd, string sVerifyPwd, string sUserPwdHint, string sRemoteIPAddr, string sBaseURL, object userState) {
            if ((this.StudentRegistrationOperationCompleted == null)) {
                this.StudentRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStudentRegistrationOperationCompleted);
            }
            this.InvokeAsync("StudentRegistration", new object[] {
                        sUserName,
                        sInstructorEmail,
                        sUserFirstName,
                        sUserLastName,
                        sUserPwd,
                        sVerifyPwd,
                        sUserPwdHint,
                        sRemoteIPAddr,
                        sBaseURL}, this.StudentRegistrationOperationCompleted, userState);
        }
        
        private void OnStudentRegistrationOperationCompleted(object arg) {
            if ((this.StudentRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StudentRegistrationCompleted(this, new StudentRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="StudentRegistration1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("RAStudentRegistration/StudentRegistration_ET", RequestElementName="StudentRegistration_ET", RequestNamespace="RAStudentRegistration", ResponseElementName="StudentRegistration_ETResponse", ResponseNamespace="RAStudentRegistration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("StudentRegistration_ETResult")]
        public string StudentRegistration(string sUserName, string sInstructorEmail, string sUserFirstName, string sUserLastName, string sUserPwd, string sVerifyPwd, string sUserPwdHint, string sRemoteIPAddr, string sBaseUrl, string sOptInEmail, out string sErrorMsg, out string sET_Msg) {
            object[] results = this.Invoke("StudentRegistration1", new object[] {
                        sUserName,
                        sInstructorEmail,
                        sUserFirstName,
                        sUserLastName,
                        sUserPwd,
                        sVerifyPwd,
                        sUserPwdHint,
                        sRemoteIPAddr,
                        sBaseUrl,
                        sOptInEmail});
            sErrorMsg = ((string)(results[1]));
            sET_Msg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StudentRegistration1Async(string sUserName, string sInstructorEmail, string sUserFirstName, string sUserLastName, string sUserPwd, string sVerifyPwd, string sUserPwdHint, string sRemoteIPAddr, string sBaseUrl, string sOptInEmail) {
            this.StudentRegistration1Async(sUserName, sInstructorEmail, sUserFirstName, sUserLastName, sUserPwd, sVerifyPwd, sUserPwdHint, sRemoteIPAddr, sBaseUrl, sOptInEmail, null);
        }
        
        /// <remarks/>
        public void StudentRegistration1Async(string sUserName, string sInstructorEmail, string sUserFirstName, string sUserLastName, string sUserPwd, string sVerifyPwd, string sUserPwdHint, string sRemoteIPAddr, string sBaseUrl, string sOptInEmail, object userState) {
            if ((this.StudentRegistration1OperationCompleted == null)) {
                this.StudentRegistration1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnStudentRegistration1OperationCompleted);
            }
            this.InvokeAsync("StudentRegistration1", new object[] {
                        sUserName,
                        sInstructorEmail,
                        sUserFirstName,
                        sUserLastName,
                        sUserPwd,
                        sVerifyPwd,
                        sUserPwdHint,
                        sRemoteIPAddr,
                        sBaseUrl,
                        sOptInEmail}, this.StudentRegistration1OperationCompleted, userState);
        }
        
        private void OnStudentRegistration1OperationCompleted(object arg) {
            if ((this.StudentRegistration1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StudentRegistration1Completed(this, new StudentRegistration1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StudentRegistrationCompletedEventHandler(object sender, StudentRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StudentRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StudentRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StudentRegistration1CompletedEventHandler(object sender, StudentRegistration1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StudentRegistration1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StudentRegistration1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string sET_Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591